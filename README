A forgiving HTML parser written in JS for Node.
Reads in imperfect HTML and spits out a simple object model.

Usage:
	var htmlparser = require("node-htmlparser");
	var rawHtml = "Xyz <script language= javascript>var foo = '<<bar>>';< /  script><!--<!-- Waah! -- -->";
	var handler = new htmlparser.DefaultHandler(function (error) {
		if (error)
			[...do something for errors...]
		else
			[...parsing done, do something...]
	});
	var parser = new htmlparser.Parser(handler);
	parser.ParseComplete(rawHtml);
	sys.puts(sys.inspect(handler.dom, false, null));

Browser Usage:
	var handler = new Tautologistics.NodeHtmlParser.DefaultHandler(function (error) {
		if (error)
			[...do something for errors...]
		else
			[...parsing done, do something...]
	});
	var parser = new Tautologistics.NodeHtmlParser.Parser(handler);
	parser.ParseComplete(document.body.innerHTML);
	alert(JSON.stringify(handler.dom, null, 2));

Example output...
		[ { raw: 'Xyz ', data: 'Xyz ', type: 'text' }
		, { raw: 'script language= javascript'
		  , data: 'script language= javascript'
		  , type: 'script'
		  , name: 'script'
		  , attribs: { language: 'javascript' }
		  , children: 
		     [ { raw: 'var foo = \'<bar>\';<'
		       , data: 'var foo = \'<bar>\';<'
		       , type: 'text'
		       }
		     ]
		  }
		, { raw: '<!-- Waah! -- '
		  , data: '<!-- Waah! -- '
		  , type: 'comment'
		  }
		]
